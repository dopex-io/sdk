{
  "address": "0xf4635464D749D22A35bE16520865857C0c02C88b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ssov",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountStaked",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalStakedBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "totalRewardsArray",
          "type": "uint256[]"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountUnstaked",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "rewardTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rewardTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "rewardTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstake",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "rewardTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9354ea934ac8954a0a6c2e297106bb7cafa32ac49b6a2cf519404d876e3c110e",
  "receipt": {
    "to": null,
    "from": "0xDe485812E28824e542B9c2270B6b8eD9232B7D0b",
    "contractAddress": "0xf4635464D749D22A35bE16520865857C0c02C88b",
    "transactionIndex": 1,
    "gasUsed": "1393470",
    "logsBloom": "0x
    "blockHash": "0xcaa772ae349f94c3a6458f5a47771b5008c482798bbb56ca4e7ac2459227f49f",
    "transactionHash": "0x9354ea934ac8954a0a6c2e297106bb7cafa32ac49b6a2cf519404d876e3c110e",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 22833517,
        "transactionHash": "0x9354ea934ac8954a0a6c2e297106bb7cafa32ac49b6a2cf519404d876e3c110e",
        "address": "0xf4635464D749D22A35bE16520865857C0c02C88b",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000de485812e28824e542b9c2270b6b8ed9232b7d0b"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xcaa772ae349f94c3a6458f5a47771b5008c482798bbb56ca4e7ac2459227f49f"
      }
    ],
    "blockNumber": 22833517,
    "cumulativeGasUsed": "1393470",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x546cd36F761f1D984eEE1Dbe67cC4F86E75cAF0C"
  ],
  "numDeployments": 3,
  "solcInputHash": "f060b0d81dfa644b19da1ebdb4c6d8c9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ssov\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStakedBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"totalRewardsArray\",\"type\":\"uint256[]\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnstaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"rewardTokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"rewardTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"rewardTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking-strategies/GohmStakingStrategy.sol\":\"GohmStakingStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/staking-strategies/GohmStakingStrategy.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\n// Contracts\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n// Interfaces\\nimport {IStakingStrategy} from \\\"./IStakingStrategy.sol\\\";\\n\\ncontract GohmStakingStrategy is IStakingStrategy, Ownable {\\n    uint256 public balance;\\n\\n    address[] public rewardTokens = new address[](0);\\n\\n    address public immutable ssov;\\n\\n    constructor(address _ssov) {\\n        ssov = _ssov;\\n    }\\n\\n    function getRewardTokens() external view returns (address[] memory) {\\n        return rewardTokens;\\n    }\\n\\n    function stake(uint256 amount)\\n        external\\n        onlySsov(msg.sender)\\n        returns (uint256[] memory rewardTokenAmounts)\\n    {\\n        balance += amount;\\n\\n        rewardTokenAmounts = new uint256[](0);\\n\\n        emit Stake(msg.sender, amount, balance, rewardTokenAmounts);\\n    }\\n\\n    function unstake()\\n        external\\n        onlySsov(msg.sender)\\n        returns (uint256[] memory rewardTokenAmounts)\\n    {\\n        rewardTokenAmounts = new uint256[](0);\\n\\n        emit Unstake(msg.sender, balance, rewardTokenAmounts);\\n    }\\n\\n    modifier onlySsov(address _sender) {\\n        require(_sender == ssov, \\\"Sender must be the ssov\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xd03be0c2b95cb84c9f5afacf96db6dd84313e9076637e3b05b367fb86667defd\",\"license\":\"UNLICENSED\"},\"contracts/staking-strategies/IStakingStrategy.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\ninterface IStakingStrategy {\\n    function stake(uint256) external returns (uint256[] memory);\\n\\n    function unstake() external returns (uint256[] memory);\\n\\n    function getRewardTokens() external view returns (address[] memory);\\n\\n    event Stake(\\n        address sender,\\n        uint256 amountStaked,\\n        uint256 totalStakedBalance,\\n        uint256[] totalRewardsArray\\n    );\\n\\n    event Unstake(\\n        address sender,\\n        uint256 amountUnstaked,\\n        uint256[] rewardTokenAmounts\\n    );\\n}\\n\",\"keccak256\":\"0xed09175dd868e3097c5c34e23adcbaaf572f0d739cfc858a6a12c4d4a86c3e84\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x600060a081905260c0604081905261001a91600291906100b0565b5034801561002757600080fd5b5060405161080f38038061080f8339810160408190526100469161012a565b61004f33610060565b6001600160a01b031660805261015a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610105579160200282015b8281111561010557825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906100d0565b50610111929150610115565b5090565b5b808211156101115760008155600101610116565b60006020828403121561013c57600080fd5b81516001600160a01b038116811461015357600080fd5b9392505050565b60805161068d6101826000396000818160f001528181610182015261028b015261068d6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b14610112578063a694fc3a14610123578063b69ef8a814610136578063c4f59f9b1461014d578063f2fde38b1461016257600080fd5b80632def662014610098578063715018a6146100b65780637bb7bed1146100c05780638355fc54146100eb575b600080fd5b6100a0610175565b6040516100ad9190610520565b60405180910390f35b6100be610240565b005b6100d36100ce36600461053a565b610254565b6040516001600160a01b0390911681526020016100ad565b6100d37f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b03166100d3565b6100a061013136600461053a565b61027e565b61013f60015481565b6040519081526020016100ad565b610155610360565b6040516100ad9190610553565b6100be6101703660046105a0565b6103c2565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681146101ef5760405162461bcd60e51b815260206004820152601760248201527629b2b73232b91036bab9ba103132903a34329039b9b7bb60491b60448201526064015b60405180910390fd5b604080516000815260208101918290526001549093507fe69f2c813fbacdba640c6e65761e2d4b772375f2fbe475137078d3ed850aff579161023491339186906105c9565b60405180910390a15090565b61024861043b565b6102526000610495565b565b6002818154811061026457600080fd5b6000918252602090912001546001600160a01b0316905081565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681146102f35760405162461bcd60e51b815260206004820152601760248201527629b2b73232b91036bab9ba103132903a34329039b9b7bb60491b60448201526064016101e6565b826001600082825461030591906105f9565b9091555050604080516000815260208101918290526001549093507ff129b07eb5effb6c354173bcbbef6ef8cbe16ba22a3207394dcd8e39314c3d39916103529133918791908790610620565b60405180910390a150919050565b606060028054806020026020016040519081016040528092919081815260200182805480156103b857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161039a575b5050505050905090565b6103ca61043b565b6001600160a01b03811661042f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101e6565b61043881610495565b50565b6000546001600160a01b031633146102525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101e6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081518084526020808501945080840160005b83811015610515578151875295820195908201906001016104f9565b509495945050505050565b60208152600061053360208301846104e5565b9392505050565b60006020828403121561054c57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156105945783516001600160a01b03168352928401929184019160010161056f565b50909695505050505050565b6000602082840312156105b257600080fd5b81356001600160a01b038116811461053357600080fd5b60018060a01b03841681528260208201526060604082015260006105f060608301846104e5565b95945050505050565b8082018082111561061a57634e487b7160e01b600052601160045260246000fd5b92915050565b60018060a01b038516815283602082015282604082015260806060820152600061064d60808301846104e5565b969550505050505056fea26469706673582212209359cef1a58b59c409ebcd61894456cfd19834d692716c63ba4fe652dec4422464736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b14610112578063a694fc3a14610123578063b69ef8a814610136578063c4f59f9b1461014d578063f2fde38b1461016257600080fd5b80632def662014610098578063715018a6146100b65780637bb7bed1146100c05780638355fc54146100eb575b600080fd5b6100a0610175565b6040516100ad9190610520565b60405180910390f35b6100be610240565b005b6100d36100ce36600461053a565b610254565b6040516001600160a01b0390911681526020016100ad565b6100d37f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b03166100d3565b6100a061013136600461053a565b61027e565b61013f60015481565b6040519081526020016100ad565b610155610360565b6040516100ad9190610553565b6100be6101703660046105a0565b6103c2565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681146101ef5760405162461bcd60e51b815260206004820152601760248201527629b2b73232b91036bab9ba103132903a34329039b9b7bb60491b60448201526064015b60405180910390fd5b604080516000815260208101918290526001549093507fe69f2c813fbacdba640c6e65761e2d4b772375f2fbe475137078d3ed850aff579161023491339186906105c9565b60405180910390a15090565b61024861043b565b6102526000610495565b565b6002818154811061026457600080fd5b6000918252602090912001546001600160a01b0316905081565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681146102f35760405162461bcd60e51b815260206004820152601760248201527629b2b73232b91036bab9ba103132903a34329039b9b7bb60491b60448201526064016101e6565b826001600082825461030591906105f9565b9091555050604080516000815260208101918290526001549093507ff129b07eb5effb6c354173bcbbef6ef8cbe16ba22a3207394dcd8e39314c3d39916103529133918791908790610620565b60405180910390a150919050565b606060028054806020026020016040519081016040528092919081815260200182805480156103b857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161039a575b5050505050905090565b6103ca61043b565b6001600160a01b03811661042f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101e6565b61043881610495565b50565b6000546001600160a01b031633146102525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101e6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081518084526020808501945080840160005b83811015610515578151875295820195908201906001016104f9565b509495945050505050565b60208152600061053360208301846104e5565b9392505050565b60006020828403121561054c57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156105945783516001600160a01b03168352928401929184019160010161056f565b50909695505050505050565b6000602082840312156105b257600080fd5b81356001600160a01b038116811461053357600080fd5b60018060a01b03841681528260208201526060604082015260006105f060608301846104e5565b95945050505050565b8082018082111561061a57634e487b7160e01b600052601160045260246000fd5b92915050565b60018060a01b038516815283602082015282604082015260806060820152600061064d60808301846104e5565b969550505050505056fea26469706673582212209359cef1a58b59c409ebcd61894456cfd19834d692716c63ba4fe652dec4422464736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3739,
        "contract": "contracts/staking-strategies/GohmStakingStrategy.sol:GohmStakingStrategy",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 17136,
        "contract": "contracts/staking-strategies/GohmStakingStrategy.sol:GohmStakingStrategy",
        "label": "balance",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 17144,
        "contract": "contracts/staking-strategies/GohmStakingStrategy.sol:GohmStakingStrategy",
        "label": "rewardTokens",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}